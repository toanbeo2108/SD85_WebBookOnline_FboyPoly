@using SD85_WebBookOnline.Share.Models;
@model SD85_WebBookOnline.Share.ViewModels.SaveBillViewModel;
<!-- Checkout Start -->
@{
    Layout = "~/Views/Shared/_layout.cshtml";
    List<CartItems> myCart = ViewBag.myCartItems as List<CartItems>;
    decimal subtotal;
    @if (ViewBag.Subtotal == null)
    {
        subtotal = 0;
    }
    else
    {
        subtotal = ViewBag.Subtotal;
    }

    Voucher voucher = ViewBag.Voucher;
    decimal? GiamGIa = voucher.DiscountAmount;
}
<form asp-action="Checkout_saveBill" asp-controller="Cart" asp-area="Customer" asp-route-Total="@subtotal" method="post">
    <div class="container-fluid pt-5">
        <div class="row px-xl-5">
            <div class="col-lg-8">
                <div class="mb-4">
                    <h4 class="font-weight-semi-bold mb-4">Billing Address</h4>
                    <div class="row">
                        <div class="col-md-6 form-group">
                            <label>Họ</label>
                            <input class="form-control" type="text" placeholder="Nguyễn Văn" asp-for="firstName" required>
                            <span asp-validation-for="firstName" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 form-group">
                            <label>Tên</label>
                            <input class="form-control" type="text" placeholder="A" asp-for="lastName" required>
                            <span asp-validation-for="lastName" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 form-group">
                            <label>E-mail</label>
                            <input class="form-control" type="text" placeholder="example@email.com" asp-for="Email" required>
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 form-group">
                            <label>Số điện thoại</label>
                            <input asp-for="UserPhone" type="text" class="form-control" placeholder="+84 123 45678" required />
                            <span asp-validation-for="UserPhone" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 form-group">
                            <label>Tỉnh/Thành phố</label>
                            <select class="custom-select" id="provinceSelect" required>
                                <option value="">Chọn tỉnh thành</option>
                            </select>
                            <input type="hidden" id="provinceName" name="ProvinceName" asp-for="ProvinceName">
                        </div>
                        <div class="col-md-6 form-group">
                            <label>Quận/Huyện</label>
                            <select class="custom-select" id="districtSelect" name="to_district_id" required>
                                <option value="" selected>Chọn quận huyện</option>
                            </select>
                            <input type="hidden" id="districtName" name="DistrictName" asp-for="DistrictName">
                        </div>
                        <div class="col-md-6 form-group">
                            <label>Xã/Huyện</label>
                            <select class="custom-select" id="wardSelect" required>
                                <option value="" selected>Chọn quận huyện</option>
                            </select>
                            <input type="hidden" id="wardName" name="WardName" asp-for="WardName">
                            <input type="hidden" id="wardCode" name="to_ward_code">
                        </div>
                        <div class="col-md-6 form-group">
                            <label>Địa chỉ</label>
                            <input class="form-control" type="text" asp-for="Street" placeholder="123 Street">
                            <span asp-validation-for="Street" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="card border-secondary mb-5">
                    <div class="card-header bg-secondary border-0">
                        <h4 class="font-weight-semi-bold m-0">Order Total</h4>
                    </div>
                    <div class="card-body">
                        <h5 class="font-weight-medium mb-3">Products</h5>
                        @foreach (var item in myCart)
                        {
                            <div class="d-flex justify-content-between">
                                <p>@item.ItemName x @item.Quantity</p>
                                <p>@item.ToTal</p>
                            </div>
                        }
                        <hr class="mt-0">
                        <div class="d-flex justify-content-between mb-3 pt-1">
                            <h6 class="font-weight-medium">Subtotal</h6>
                            <h6 class="font-weight-medium">@subtotal</h6>
                        </div>
                        @if (GiamGIa != null)
                        {
                            <div class="d-flex justify-content-between">
                                <h6 class="font-weight-medium">Voucher</h6>
                                <h6 class="font-weight-medium voucher">-@voucher.DiscountAmount</h6>
                            </div>
                        }
                        <div class="d-flex justify-content-between">
                            <h6 class="font-weight-medium">Ship</h6>
                            <h6 class="font-weight-medium feeShip">0</h6>
                        </div>
                    </div>
                    <div class="card-footer border-secondary bg-transparent">
                        <div class="d-flex justify-content-between mt-2">
                            <h5 class="font-weight-bold">Total</h5>
                            <h5 class="font-weight-bold Total">@subtotal</h5>
                        </div>
                    </div>
                </div>
                <div class="card border-secondary mb-5">
                    <div class="card-header bg-secondary border-0">
                        <h4 class="font-weight-semi-bold m-0">Payment</h4>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            <div class="custom-control custom-radio">
                                <input type="radio" class="custom-control-input" id="paypal" asp-for="PaymentMethod" value="1" required>
                                <label class="custom-control-label" for="paypal">Paypal</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="custom-control custom-radio">
                                <input type="radio" class="custom-control-input" id="directcheck" asp-for="PaymentMethod" value="2" required>
                                <label class="custom-control-label" for="directcheck">Direct Check</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="custom-control custom-radio">
                                <input type="radio" class="custom-control-input" id="banktransfer" asp-for="PaymentMethod" value="3" required>
                                <label class="custom-control-label" for="banktransfer">Bank Transfer</label>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer border-secondary bg-transparent">
                        <button type="submit" value="Post" class="btn btn-primary">Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Checkout End -->
</form>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    // Hàm chuyển đổi chuỗi tiền tệ sang số
    const parseCurrencyToNumber = (currencyString) => {
        return parseFloat(currencyString.replace(/[^\d.-]/g, ''));
    };

    // Gọi API để lấy danh sách tỉnh thành
    fetch('https://localhost:7079/api/GhnApi/get-provinces')
        .then(response => response.json())
        .then(data => {
            // Lấy select element
            const provinceSelect = document.getElementById('provinceSelect');

            // Duyệt qua danh sách tỉnh thành và thêm vào select box
            data.data.forEach(province => {
                const option = document.createElement('option');
                option.value = province.ProvinceID;
                option.text = province.ProvinceName;
                provinceSelect.appendChild(option);
            });
        })
        .catch(error => {
            console.error('Error fetching provinces:', error);
        });

    // Lắng nghe sự kiện khi chọn tỉnh
    document.getElementById("provinceSelect").addEventListener("change", function () {
        const selectedProvinceId = this.value;
        const selectedProvinceName = this.options[this.selectedIndex].text;
        // Lưu tên tỉnh vào trường ẩn
        document.getElementById("provinceName").value = selectedProvinceName;
        // Gọi API để lấy danh sách quận dựa trên ProvinceID
        fetch(`https://localhost:7079/api/GhnApi/get-districts?provinceId=${selectedProvinceId}`)
            .then(response => response.json())
            .then(data => {
                // Lấy thẻ select quận
                const districtSelect = document.getElementById("districtSelect");

                // Xóa các tùy chọn quận cũ
                districtSelect.innerHTML = "";

                // Thêm một tùy chọn mặc định
                const defaultOption = document.createElement("option");
                defaultOption.value = "";
                defaultOption.text = "Chọn quận huyện";
                districtSelect.appendChild(defaultOption);

                // Thêm các tùy chọn quận mới
                data.data.forEach(district => {
                    const option = document.createElement("option");
                    option.value = district.DistrictID;
                    option.text = district.DistrictName;
                    districtSelect.appendChild(option);
                });
            })
            .catch(error => console.error("Error fetching districts:", error));
    });

    // Lắng nghe sự kiện khi chọn quận
    document.getElementById("districtSelect").addEventListener("change", function () {
        const selectedDistrictId = this.value;
        const selectedDistrictName = this.options[this.selectedIndex].text;
        // Lưu tên quận vào trường ẩn
        document.getElementById("districtName").value = selectedDistrictName;

        // Gọi API để lấy danh sách xã/phường dựa trên DistrictID
        fetch(`https://localhost:7079/api/GhnApi/get-wards?districtId=${selectedDistrictId}`)
            .then(response => response.json())
            .then(data => {
                // Lấy thẻ select xã/phường
                const wardSelect = document.getElementById("wardSelect");

                // Xóa các tùy chọn xã/phường cũ
                wardSelect.innerHTML = "";

                // Thêm một tùy chọn mặc định
                const defaultOption = document.createElement("option");
                defaultOption.value = "";
                defaultOption.text = "Chọn xã phường";
                wardSelect.appendChild(defaultOption);

                // Thêm các tùy chọn xã/phường mới
                data.data.forEach(ward => {
                    const option = document.createElement("option");
                    option.value = ward.WardCode;
                    option.text = ward.WardName;
                    wardSelect.appendChild(option);
                });
            })
            .catch(error => console.error("Error fetching wards:", error));
    });

  
    // Lắng nghe sự kiện khi chọn xã
    document.getElementById("wardSelect").addEventListener("change", async function () {
        const wardSelectId = this.value;
        const selectedDistrictId = document.getElementById("districtSelect").value;

        const response = await fetch(`https://localhost:7079/api/GhnApi/get-feeShip?to_district_id=${selectedDistrictId}&to_ward_code=${wardSelectId}&weight=5000`);

        if (!response.ok) {
            console.error(`Lỗi: ${response.status}`);
            return;
        }

        const result = await response.json();
        if (result.code === 200) {
            // Cập nhật phần tử feeShip trong HTML
            document.querySelector('.feeShip').innerText = `${result.data.total}`;
            // Lưu wardCode vào trường ẩn
            document.getElementById("wardCode").value = wardSelectId;
            // Cập nhật tổng
            updateTotal(@subtotal, result.data.total,@GiamGIa);
        } else {
            console.error('Phản hồi từ máy chủ không hợp lệ');
        }
    });

    // Hàm cập nhật tổng giá trị
    const updateTotal = (subtotal, feeShip, discountAmount) => {
        // Kiểm tra nếu subtotal không phải là số, không thực hiện cập nhật
        if (isNaN(subtotal)) {
            console.error('subtotal không phải là số');
            return;
        }

        // Chuyển giá ship sang decimal
        const feeShipDecimal = parseFloat(feeShip);

        // Kiểm tra nếu feeShip không phải là số, không thực hiện cập nhật
        if (isNaN(feeShipDecimal)) {
            console.error('feeShip không phải là số');
            return;
        }

        // Chuyển giảm giá sang decimal hoặc mặc định là 0 nếu discountAmount là null
        const discountDecimal = parseFloat(discountAmount) || 0;

        // Kiểm tra nếu discountAmount không phải là số, không thực hiện cập nhật
        if (isNaN(discountDecimal)) {
            console.error('discountAmount không phải là số');
            return;
        }

        // Thực hiện phép cộng và trừ
        const total = subtotal - discountDecimal + feeShipDecimal;

        // Cập nhật tổng giá trị trong HTML với đơn vị "đ"
        document.querySelector('.Total').innerText = `${total.toLocaleString()} đ`;
    };
</script>